unit Model.Item.RegraVarejo;

interface

uses Interfaces.Visitor;

Type
  TModelItemRegraVarejo = class(TInterfacedObject, iItemRegras, iVisitor)
    private
      FVisit : iItem;
    public
      constructor Create;
      destructor Destroy; override;
      class function New : iItemRegras;
      function PrecoVenda : Currency;
      function PrecoPromocao : Currency;
      function Visit(Value : iItem) : iItemRegras; //Visitante
      function Visitor: iVisitor;
  end;

implementation

const
  cDescontoItemPrecoPromocaoBD = 0.9;
  cDescontoItemPrecoVendaBD = 1;

{TModelItemRegraVarejo}

constructor TModelItemRegraVarejo.Create;
begin

end;

destructor TModelItemRegraVarejo.Destroy;
begin

  inherited;
end;

class function TModelItemRegraVarejo.New : iItemRegras;
begin
  Result := Self.Create;
end;

function TModelItemRegraVarejo.PrecoPromocao: Currency;
begin
  Result := (FVisit.PrecoUnitario * cDescontoItemPrecoPromocaoBD)
end;

function TModelItemRegraVarejo.PrecoVenda: Currency;
begin
  Result := (FVisit.PrecoUnitario * cDescontoItemPrecoVendaBD)
end;

function TModelItemRegraVarejo.Visit(Value: iItem): iItemRegras;
begin
  FVisit := Value;
  Result := Self;
end;

function TModelItemRegraVarejo.Visitor: iVisitor;
begin
  Result := Self;
end;

end.

