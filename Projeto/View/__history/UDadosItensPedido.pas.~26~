unit UDadosItensPedido;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.ExtCtrls, Vcl.StdCtrls, Vcl.Buttons,
  Vcl.Mask;

type
  TFDadosItensPedido = class(TForm)
    PRodape: TPanel;
    PDados: TPanel;
    BBSair: TBitBtn;
    BBGravar: TBitBtn;
    LECodigoProduto: TLabeledEdit;
    LEDescricao: TLabeledEdit;
    SBF2: TSpeedButton;
    LEQtd: TLabeledEdit;
    LEPreco: TLabeledEdit;
    LEValor: TLabeledEdit;
    procedure BBSairClick(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure SBF2Click(Sender: TObject);
    procedure FormKeyDown(Sender: TObject; var Key: Word; Shift: TShiftState);
    procedure LEPrecoExit(Sender: TObject);
    procedure LEQtdKeyPress(Sender: TObject; var Key: Char);
  private
    { Private declarations }
    procedure OnlyNumber(var Key: char; ETextEdit: String);
    procedure MaskEdit(var LEAmount, LEPrice, LEValue: TLabeledEdit);
    procedure ConsultProduct;
  public
    { Public declarations }
  end;

var
  FDadosItensPedido: TFDadosItensPedido;

implementation

{$R *.dfm}

uses UConsultaProdutos;

procedure TFDadosItensPedido.BBSairClick(Sender: TObject);
begin
  Close;
end;

procedure TFDadosItensPedido.ConsultProduct;
begin
  FConsultaProdutos := TFConsultaProdutos.Create(Application);
  FConsultaProdutos.ShowModal;
end;

procedure TFDadosItensPedido.FormClose(Sender: TObject; var Action: TCloseAction);
begin
  Action := CaFree;
end;

procedure TFDadosItensPedido.FormKeyDown(Sender: TObject; var Key: Word;
  Shift: TShiftState);
begin
  if key = vk_F2 then
    ConsultProduct;
end;

procedure TFDadosItensPedido.LEPrecoExit(Sender: TObject);
begin
  MaskEdit(LEQtd, LEPreco, LEValor);
end;

procedure TFDadosItensPedido.LEQtdKeyPress(Sender: TObject; var Key: Char);
var
  edText : String;
begin
  edText := (Sender as TLabeledEdit).Text;
  OnlyNumber(Key, edText);
end;

procedure TFDadosItensPedido.MaskEdit(var LEAmount, LEPrice, LEValue: TLabeledEdit);
var
  dAmount, dPrice : Double;
begin
  dAmount := StrToFloatDef(LEAmount.Text,0);
  dPrice := StrToFloatDef(LEPreco.Text,0);
  LEAmount.Text := FormatFloat('###,##0.00',dAmount);
  LEPrice.Text := FormatFloat('###,##0.00',dPrice);
  LEValue.Text := FormatFloat('###,##0.00',dAmount*dPrice);
end;

procedure TFDadosItensPedido.OnlyNumber(var Key: char; ETextEdit: String);
begin
  // Permite apenas números (0-9), decimal (,) e teclas de controle (Backspace, Delete, etc.)
  //if not (Key in ['0'..'9', ',', #8, #46]) then
  if not CharInSet(Key, ['0'..'9', ',', #8, #46]) then
  begin
    Key := #0;
    Exit;
  end;

  // Verifica se já existe um decimal no texto
  if (Key = ',') and (Pos(',', ETextEdit) > 0) then
  begin
    Key := #0;
    Exit;
  end;
end;

procedure TFDadosItensPedido.SBF2Click(Sender: TObject);
begin
  ConsultProduct;
end;

end.
